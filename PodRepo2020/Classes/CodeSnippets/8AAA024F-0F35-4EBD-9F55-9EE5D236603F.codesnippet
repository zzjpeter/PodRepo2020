<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>SC_TableView</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>#pragma mark -tableView begin ########
//@property (nonatomic,strong) NYGTableView *tableView;
//@property (nonatomic,strong) JRTableViewCellFactory *tableViewCellFactory;
//@property (nonatomic,strong) NSMutableArray *dataSources;
-(NYGTableView *)tableView{
    if (!_tableView) {
        _tableView = [[NYGTableView alloc] initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, SCTableViewDefaultHeight)];
        [_tableView nyg_setEstimatedRowHeightToZero];
        [_tableView nyg_contentInsetAdjustmentBehaviorToNever];
        _tableView.qn_delegate = self;
        _tableView.qn_dataSource = self;
        _tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
        _tableView.backgroundColor = [SCColorConfig tableSectionBackColor];
    }
    return _tableView;
}

- (void)configTableView{
    [self _configureCellFactory];
}

- (JRTableViewCellFactory *)tableViewCellFactory {
    if (!_tableViewCellFactory) {
        _tableViewCellFactory = [JRTableViewCellFactory factoryWithTableView:self.tableView];
    }
    return _tableViewCellFactory;
}

- (void)_configureCellFactory {
    [self.tableViewCellFactory registerCellClass:[SCHomeGoodLessonCell class]
                                       condition:^BOOL(SCHomeCategoriesInfosModel *item, JRTableViewCellLayoutContext *context) {
                                           return YES;
                                       }];
    [self.tableViewCellFactory registerCellClass:[SCHomeObservationLessonCell class]
                                       condition:^BOOL(SCHomeCategoriesInfosModel *item, JRTableViewCellLayoutContext *context) {
                                           return YES;
                                       }];
}

- (JRTableViewCellLayoutContext *)_tableViewCellLayoutContext:(id)data indexPath:(NSIndexPath *)indexPath {
    JRTableViewCellLayoutContext *context = [JRTableViewCellLayoutContext defaultContext];
    context.indexPath = indexPath;
    context.controller = self;
    //    context.isLastRow = [self _isLastRowForIndex:indexPath];;
    
    return context;
}

- (BOOL)_isLastRowForIndex:(NSIndexPath *)indexPath {
    if (!indexPath) {
        return NO;
    }
    
    NSInteger next = indexPath.row + 1;
    SCHomeCategoriesModel *model = [self.dataSources safeObjectAtIndex:indexPath.section];
    SCHomeCategoriesInfosModel *item = [model.infos safeObjectAtIndex:next];
    if (item) {
        return YES;
    }else{
        return NO;
    }
}

//@protocol KBTableViewCellProtocol&lt;NSObject&gt;
//@required
//+ (CGFloat)heightForData:(id)data width:(CGFloat)width context:(JRTableViewCellLayoutContext *)context;//根据model获取cell高度 协议方法 （cell具体实现）
//- (void)layoutWithData:(id)data context:(JRTableViewCellLayoutContext *)context;//根据model数据布局cell 协议方法 （cell具体实现）
//@optional

#pragma mark -tableView end ########

//#pragma mark -tableView dataSource
//- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
//    return self.dataSources.count;
//}
//
//- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
//
//    SCHomeCategoriesModel *model = [self.dataSources safeObjectAtIndex:section];
//    NSArray *listArray = model.infos;
//    return listArray.count;
//
//}
//
//- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
//
//    SCHomeCategoriesModel *model = [self.dataSources safeObjectAtIndex:indexPath.section];
//    SCHomeCategoriesInfosModel *item = [model.infos safeObjectAtIndex:indexPath.row];
//    JRTableViewCellLayoutContext *context = [self _tableViewCellLayoutContext:item indexPath:indexPath];
//    UITableViewCell *cell = [self.tableViewCellFactory dequeueReusableCellWithData:item context:context];
//    if (!cell) {
//        QN_E(@"cell nil!!");
//    }
//    return cell;
//}
//
//- (void)tableView:(UITableView *)tableView willDisplayCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath *)indexPath{
//    SCHomeCategoriesModel *model = [self.dataSources safeObjectAtIndex:indexPath.section];
//    SCHomeCategoriesInfosModel *item = [model.infos safeObjectAtIndex:indexPath.row];
//    JRTableViewCellLayoutContext *context = [self _tableViewCellLayoutContext:item indexPath:indexPath];
//    JRTableViewCell *c = AS(JRTableViewCell, cell);
//
//    [UIView performWithoutAnimation:^{
//        [c layoutWithData:item context:context];
//    }];
//}
//
//#pragma mark -tableView delegate
//// Variable height support
//- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
//    SCHomeCategoriesModel *model = [self.dataSources safeObjectAtIndex:indexPath.section];
//    SCHomeCategoriesInfosModel *item = [model.infos safeObjectAtIndex:indexPath.row];
//    JRTableViewCellLayoutContext *context = [self _tableViewCellLayoutContext:item indexPath:indexPath];
//    return [self.tableViewCellFactory heightForData:item context:context];
//}
//- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{
//    if (section == 0 &amp;&amp; self.bannerArray.count &gt; 0) {
//        return NP(172 + 15) + NP(20 + 18 + 15);
//    }
//    SCHomeCategoriesModel *model = [self.dataSources safeObjectAtIndex:section];
//    if (CHECK_VALID_STRING(model.categoryName)) {
//        return NP(20 + 18 + 15);
//    }
//    return 0.1;
//}
//- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section{
//    return 0.1;
//}
//
//- (nullable UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section{
//
//    UIView *headView = [UIView new];
//    headView.backgroundColor = [SCColorConfig tableSectionBackColor];
//
//    if (section == 0 &amp;&amp; self.bannerArray.count &gt; 0) {
//        self.bannerView.isShowNumL = YES;
//        self.bannerView.imageURLStringsGroup = self.bannerArray;
//        [headView addSubview:self.bannerView];
//    }
//
//    SCHomeCategoriesModel *model = [self.dataSources safeObjectAtIndex:section];
//    if (CHECK_VALID_STRING(model.categoryName)) {
//        UILabel *descLabel = [UILabel new];
//        [headView addSubview:descLabel];
//        descLabel.frame = NPRectMake(15, 20, 200, 18);
//        if (section == 0 &amp;&amp; self.bannerArray.count &gt; 0) {
//            descLabel.frame = NPRectMake(15, 172 + 15 + 20, 200, 18);
//        }
//        descLabel.text = [NSString stringWithFormat:@"%@",model.categoryName];
//        descLabel.font = [SCFontConfig GroupTitleEtcFont];
//        descLabel.textColor = [SCColorConfig moreViewTitleLabelColor];
//        descLabel.textAlignment = NSTextAlignmentLeft;
//    }
//
//    return headView;
//}
//- (nullable UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section{
//    UIView *footerView = [[UIView alloc] init];
//    return footerView;
//}
//// Selection
//- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
//    SCLog(@"indexPath:%@",indexPath);
//}
////- (void)tableView:(UITableView *)tableView didDeselectRowAtIndexPath:(NSIndexPath *)indexPath;</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>8AAA024F-0F35-4EBD-9F55-9EE5D236603F</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Generic</string>
	<key>IDECodeSnippetTitle</key>
	<string>SC_TableView</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
