<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>LS_RefreshVC</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>#import "WXYZ_BookMallStyleMoreTableViewCell.h"

@interface ViewController () &lt;UITableViewDelegate, UITableViewDataSource&gt;

@property (nonatomic, assign) BOOL isLoading;//是否正在加载标识
@property (nonatomic, strong) NSURLSessionDataTask *task;//当前task

@end

@implementation ViewController

-(void)dealloc {
    NSLog(@"%@ dealloc",NSStringFromClass(self.class));
    [self removeNoti];
}

- (void)viewDidLoad {
    [super viewDidLoad];
    [self initialize];
    [self buildView];
    [self loadData];
}

- (void)viewWillAppear:(BOOL)animated
{
    if (self.viewWillAppear) {
        [self loadData];
    }
    
    [super viewWillAppear:animated];
        
    [self setStatusBarDefaultStyle];
    
}

- (void)viewDidAppear:(BOOL)animated
{
    [super viewDidAppear:animated];
}

- (void)initialize
{
    self.view.backgroundColor = kWhiteColor;
    
    [self handleData];
    
    [self addNoti];
    
    [self setNavigationBar:self.navigationBar];
}

- (void)setNavigationBar:(WXYZ_BasicNavBarView *)navigationBar {
    
    [self setNavigationBarTitle:@"标题"];
    
}

- (void)handleData {
    
}

- (void)buildView
{
    self.mainTableViewGroup.delegate = self;
    self.mainTableViewGroup.dataSource = self;
    [self.view addSubview:self.mainTableViewGroup];
    
    [self.mainTableViewGroup mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.mas_equalTo(0);
        make.top.mas_equalTo(0);
        make.width.mas_equalTo(self.view);
        make.height.mas_equalTo(self.view);
    }];
    
    [self addViewRefresh];
    
    [self.mainTableViewGroup layoutIfNeeded];
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return self.dataSourceArray.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    WXYZ_ProductionModel *t_model = [self.dataSourceArray safeObjectAtIndex:indexPath.row];
    return [self createMoreStyleCellWithTableView:tableView atIndexPath:indexPath bookModel:t_model];
}

- (UITableViewCell *)createMoreStyleCellWithTableView:(UITableView *)tableView atIndexPath:(NSIndexPath *)indexPath bookModel:(WXYZ_ProductionModel *)bookModel
{
    //@weakify(self)
    static NSString *cellName = @"WXYZ_BookMallStyleMoreTableViewCell";
    WXYZ_BookMallStyleMoreTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:cellName];
    if (!cell) {
        cell = [[WXYZ_BookMallStyleMoreTableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:cellName];
    }
    cell.bookModel = bookModel;
    cell.cellDidSelectItemBlock = ^(NSInteger production_id, WXYZ_ProductionModel * _Nullable bookModel) {
        //@strongify(self)
        [JumpManager.sharedManager jumpToDetailViewController:bookModel];
    };
    cell.selectionStyle = UITableViewCellSelectionStyleNone;
    return cell;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{
    return CGFLOAT_MIN;
}
- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section{
    return CGFLOAT_MIN;
}

- (nullable UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section{
    UIView *headerView = [UIView new];
    return headerView;
}
- (nullable UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section{
    UIView *footerView = [UIView new];
    return footerView;
}


#pragma mark UIScrollViewDelegate
- (void)scrollViewDidScroll:(UIScrollView *)scrollView {
        
}

#pragma mark action


#pragma mark setter/getter

#pragma mark requestData
- (void)addViewRefresh {
    @weakify(self)
    
    [self.mainTableViewGroup addFooterRefreshWithRefreshingBlock:^{
        @strongify(self)
        [self loadMoreData];
    }];
    
    [self.mainTableViewGroup addHeaderRefreshWithRefreshingBlock:^{
        @strongify(self)
        [self.mainTableViewGroup.mj_footer resetNoMoreData];
        self.mainTableViewGroup.mj_footer.hidden = NO;
        [self loadData];
    }];
    
    
}

- (void)stopAnimatingViewRefresh:(BOOL)isRefresh
{
    _isLoading = NO;
    if (isRefresh) {
        [self.mainTableViewGroup.mj_header endRefreshing];
        return;
    }
    
    [self.mainTableViewGroup.mj_footer endRefreshing];
}

- (void)loadData {
    
    //reset
    _isLoading = NO;
    [self.task cancel];
    
    self.currentPageNumber = 1;
    
    [self requestData:YES];
}

- (void)loadMoreData {
    
    [self requestData:NO];
}

- (void)requestData:(BOOL)isRefresh {
    
    if (_isLoading) {
        return;
    }
    
    _isLoading = YES;
    
    @weakify(self)
    
    NSMutableDictionary *paramsM = [NSMutableDictionary new];
    [paramsM setValue:@(self.currentPageNumber) forKey:@"page_num"];
    [paramsM setValue:@"2" forKey:@"channel_id"];
    
    self.task = [WXYZ_NetworkRequestManger.sharedManager POST:BookFinish parameters:paramsM success:^(NSURLSessionDataTask * _Nonnull task, NSDictionary * _Nullable response) {
        @strongify(self)
        [self stopAnimatingViewRefresh:isRefresh];
        
        if(SafeGetIntValue(response[@"error"]) == 0) {
            
            LS_CommonModel *model1 = [LS_CommonModel modelWithDictionary:SafeGetDictionaryValue(response[@"data"])];
            
            WXYZ_ListModel *model = [WXYZ_ListModel modelWithDictionary:SafeGetDictionaryValue(response[@"data"])];
            NSArray *temps = model.list;
            if (self.currentPageNumber == 1) {
                [self.dataSourceArray removeAllObjects];
                [self.dataSourceArray addObjectsFromArray:temps];
            } else {
                [self.dataSourceArray addObjectsFromArray:temps];
            }
            
            // pageNum处理 和 是否结束刷新
            if (model.total_page &lt;= model.current_page) {
                [self.mainTableViewGroup hideRefreshFooter];
            }else {
                self.currentPageNumber = (int)(model.current_page + 1);
            }
            
            [self refreshUI];
            return;
        }
        
        return;
    } failure:^(NSURLSessionDataTask * _Nullable task, NSError * _Nonnull error) {
        [self stopAnimatingViewRefresh:isRefresh];
    }];
    
}

- (void)refreshUI {
    [self.mainTableViewGroup reloadData];
}


#pragma mark noti
- (void)addNoti {
}
- (void)removeNoti {
    [[NSNotificationCenter defaultCenter] removeObserver:self];
}

@end
</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>332BB943-3079-4D8F-8F96-36B4EE2181FC</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Objective-C</string>
	<key>IDECodeSnippetSummary</key>
	<string>LS_RefreshVC</string>
	<key>IDECodeSnippetTitle</key>
	<string>LS_RefreshVC</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
