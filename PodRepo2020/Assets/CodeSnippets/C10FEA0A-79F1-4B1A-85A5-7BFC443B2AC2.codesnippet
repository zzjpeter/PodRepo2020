<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>Gesture_demo</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>- (void)test{
    
    [self buildView];
    
    self.images = [NSMutableArray new];
    for (int i = 0; i &lt; 3 ; i++) {
        NSString * imageName =[NSString stringWithFormat:@"Group%d.png",i];
        [self.images addObject:imageName];
    }

    //1.创建轻拍手势
    //[self tapGestureRecognizer];
    //2.创建轻扫手势
//    [self swipeGestureRecognizer];
    //3.创建长按手势
//    [self longPressGestureRecognizer];
//    //4.创建平移手势
//    [self panGestureTecognizer];
//    //5.创建捏合手势
//    [self pinchGestureRecognizer];
//    //6.创建 旋转手势
//    [self rotationGestureRecognizer]
//    //7.创建边缘手势
//    [self screenEdgePanGestureRecognizer];
    
    
}


- (void)buildView{
    
    UIImageView *imageView = [[UIImageView alloc] initWithFrame:self.view.bounds];
    [self.view addSubview:imageView];
    imageView.backgroundColor = [UIColor purpleColor];
    imageView.image = [UIImage imageNamed:@"Group0.png"];
    self.imageView = imageView;
    imageView.userInteractionEnabled = YES;
}

#pragma mark -轻拍手势
//创建轻拍手势
-(void)tapGestureRecognizer{
    
    UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(tapAction:)];
    tap.numberOfTouchesRequired = 1;
    tap.numberOfTapsRequired = 1;
    [_imageView addGestureRecognizer:tap];
}

//轻拍事件

-(void)tapAction:(UITapGestureRecognizer *)tap
{
    
    //图片切换
    NSLog(@"拍一下");
    _index++;
    if (_index == 3) {
        _index = 0;
    }
    self.imageView.image =[UIImage imageNamed:_images[_index]];
}

#pragma mark -轻扫手势

//轻扫手势
-(void)swipeGestureRecognizer{
    
    UISwipeGestureRecognizer *swipe = [[UISwipeGestureRecognizer alloc] initWithTarget:self action:@selector(swipeAction:)];
    //配置属性
    //一个清扫手势  只能有一个方向(上和下) 或者 (左或右)
    //如果想支持上下左右清扫  那么一个手势不能实现  需要创建多个手势
    swipe.direction = UISwipeGestureRecognizerDirectionLeft;
    [_imageView addGestureRecognizer:swipe];

    UISwipeGestureRecognizer *swipe2 =[[UISwipeGestureRecognizer alloc]initWithTarget:self action:@selector(swipeAction:)];
    swipe2.direction =UISwipeGestureRecognizerDirectionRight;
    [_imageView addGestureRecognizer:swipe2];
    
    UISwipeGestureRecognizer *swipe3 = [[UISwipeGestureRecognizer alloc] initWithTarget:self action:@selector(swipeAction:)];
    swipe3.direction = UISwipeGestureRecognizerDirectionUp;
    [_imageView addGestureRecognizer:swipe3];
    
    UISwipeGestureRecognizer *swipe4 = [[UISwipeGestureRecognizer alloc] initWithTarget:self action:@selector(swipeAction:)];
    swipe4.direction = UISwipeGestureRecognizerDirectionDown;
    [_imageView addGestureRecognizer:swipe4];
}

//轻扫事件
-(void)swipeAction:(UISwipeGestureRecognizer *)swipe{
    
    NSLog(@"扫一下");
    if (swipe.direction ==UISwipeGestureRecognizerDirectionRight)       {
        NSLog(@"右清扫");
        _index --;
        if (_index &lt; 0) {
            _index =2;
        }
        _imageView.image =[UIImage imageNamed:_images[_index]];
    }else if(swipe.direction == UISwipeGestureRecognizerDirectionLeft){
        NSLog(@"左扫一下");
        _index ++;
        if (_index == 3) {
            _index=0;
        }
        _imageView.image =[UIImage imageNamed:_images[_index]];
    }
    
    if (swipe.direction == UISwipeGestureRecognizerDirectionUp) {
        NSLog(@"上扫一下");
    }else if (swipe.direction == UISwipeGestureRecognizerDirectionDown){
        NSLog(@"下扫一下");
    }
}


- (void)longPressGestureRecognizer{
    
    UILongPressGestureRecognizer *longPress = [[UILongPressGestureRecognizer alloc] initWithTarget:self action:@selector(longPressAction:)];
    longPress.minimumPressDuration = 2.0;
    longPress.allowableMovement = 1;
    [_imageView addGestureRecognizer:longPress];
}

//长按事件
-(void)longPressAction:(UILongPressGestureRecognizer *)longPress
{
    if (longPress.state == UIGestureRecognizerStateBegan) {
        NSLog(@"长按开始");
        //将图片保存到相册
        UIImage *image =[UIImage imageNamed:_images[_index]];
        UIImageWriteToSavedPhotosAlbum(image, nil, nil, nil);
    }else if (longPress.state == UIGestureRecognizerStateChanged){
        NSLog(@"长按changed");
    }else if (longPress.state == UIGestureRecognizerStateEnded){
        NSLog(@"长按结束");
    }
}

#pragma mark -平移手势
//创建平移手势
- (void)panGestureTecognizer{
    
    UIPanGestureRecognizer *pan = [[UIPanGestureRecognizer alloc] initWithTarget:self action:@selector(panAction:)];
    [_imageView addGestureRecognizer:pan];
}

//创建平移事件
- (void)panAction:(UIPanGestureRecognizer *)pan{
    
    //获取手势的位置
    CGPoint position = [pan translationInView:_imageView];//// translation in the coordinate system of the specified view
    NSLog(@"position:%@",NSStringFromCGPoint(position));
    //通过transform 进行平移交换
    _imageView.transform = CGAffineTransformTranslate(_imageView.transform, position.x, position.y);
    //将增量置为零
    [pan setTranslation:CGPointZero inView:_imageView];
}

#pragma 捏合手势
-(void)pinchGestureRecognizer{
    
    UIPinchGestureRecognizer *pinch = [[UIPinchGestureRecognizer alloc] initWithTarget:self action:@selector(pinchAction:)];
    [_imageView addGestureRecognizer:pinch];
}

//添加捏合事件
-(void)pinchAction:(UIPinchGestureRecognizer *)pinch{
    
    NSLog(@"scale:%lf",pinch.scale);
    //通过 transform(改变) 进行视图的视图的捏合
    _imageView.transform = CGAffineTransformScale(_imageView.transform, pinch.scale, pinch.scale);
    //设置比例 为 1
    pinch.scale = 1;
}

#pragma mark -旋转手势

//创建旋转手势
-(void)rotationGestureRecognizer
{
    
    UIRotationGestureRecognizer *rotation =[[UIRotationGestureRecognizer alloc]initWithTarget:self action:@selector(rotationAction:)];
    //添加到指定的视图
    [_imageView addGestureRecognizer:rotation];
    
}
//旋转事件

-(void)rotationAction:(UIRotationGestureRecognizer *)rote
{
    
    //通过transform 进行旋转变换
    _imageView.transform = CGAffineTransformRotate(_imageView.transform, rote.rotation);
    //将旋转角度 置为 0
    rote.rotation = 0;
    
}

#pragma mark -边缘手势

//创建边缘手势
-(void)screenEdgePanGestureRecognizer
{
    UIScreenEdgePanGestureRecognizer *screenPan = [[UIScreenEdgePanGestureRecognizer alloc]initWithTarget:self action:@selector(screenPanAction:)];
    [_imageView addGestureRecognizer:screenPan];
    
}
//创建边缘事件
-(void)screenPanAction:(UIScreenEdgePanGestureRecognizer *)screenPan
{
    NSLog(@"边缘");
}
</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>C10FEA0A-79F1-4B1A-85A5-7BFC443B2AC2</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Generic</string>
	<key>IDECodeSnippetTitle</key>
	<string>手势demo参考</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
